{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","categoriesWithUser","categoriesFromServer","map","category","owner","userId","usersFromServer","find","user","products","categoryId","product","App","useState","selectedUser","setSelectedUser","query","setQuery","selectedCategories","setSelectedCategory","sortBy","setSortBy","selectNewUser","userName","visibleProducts","filter","preparedQuery","trim","toLowerCase","includes","resetQuery","resetSelectedCategory","length","handleSortBy","sortField","sort","productA","productB","localeCompare","className","href","onClick","classNames","type","placeholder","value","onChange","event","target","categoryTitle","selected","prevSelectedCategory","foundIndex","findIndex","slice","selectNewCategory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae17f894.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst getUserById = (userId) => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser;\n};\n\nconst categoriesWithUser = categoriesFromServer.map(category => ({\n  ...category,\n  owner: getUserById(category.ownerId),\n}));\n\nconst getCategoryById = (categoryId) => {\n  const foundCategory = categoriesWithUser\n    .find(category => category.id === categoryId);\n\n  return foundCategory;\n};\n\nconst products = productsFromServer.map(product => ({\n  ...product,\n  category: getCategoryById(product.categoryId),\n}));\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('All');\n  const [query, setQuery] = useState('');\n  const [selectedCategories, setSelectedCategory] = useState([]);\n  const [sortBy, setSortBy] = useState('');\n\n  const selectNewUser = (userName) => {\n    setSelectedUser(userName);\n  };\n\n  let visibleProducts = products.filter(product => (\n    selectedUser === 'All' || product.category.owner.name === selectedUser\n  ));\n\n  const handleInputChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  visibleProducts = visibleProducts.filter((product) => {\n    const preparedQuery = query.trim().toLowerCase();\n    const preparedName = product.name.toLowerCase();\n\n    return preparedName.includes(preparedQuery);\n  });\n\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  const selectNewCategory = (categoryTitle) => {\n    let selected = [];\n\n    setSelectedCategory((prevSelectedCategory) => {\n      if (prevSelectedCategory.includes(categoryTitle)) {\n        const foundIndex = prevSelectedCategory.findIndex(category => category === categoryTitle);\n\n        selected = [\n          ...prevSelectedCategory.slice(0, foundIndex),\n          ...prevSelectedCategory.slice(foundIndex + 1),\n        ];\n      } else {\n        selected = [...prevSelectedCategory, categoryTitle];\n      }\n\n      return selected;\n    });\n  };\n\n  const resetSelectedCategory = () => {\n    setSelectedCategory([]);\n  };\n\n  visibleProducts = visibleProducts.filter(product => (\n    selectedCategories.length === 0 || selectedCategories.includes(product.category.title)\n  ));\n\n  const handleSortBy = (sortField) => {\n    setSortBy(sortField);\n  };\n\n  visibleProducts = visibleProducts.sort((productA, productB) => {\n    switch (sortBy) {\n      case 'id':\n        return productA.id - productB.id;\n      case 'product':\n        return productA.name.localeCompare(productB.name);\n      case 'category':\n        return productA.category.title.localeCompare(productB.category.title);\n      case 'user':\n        return productA.category.owner.name.localeCompare(productB.category.owner.name);\n      default:\n        return 0;\n    }\n  });\n\n  const resetAllFilters = () => {\n    resetQuery();\n    setSelectedUser('All');\n    resetSelectedCategory();\n    setSortBy('');\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => selectNewUser('All')}\n                className={classNames(\n                  { 'is-active': selectedUser === 'All' },\n                )}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  onClick={() => selectNewUser(user.name)}\n                  className={classNames(\n                    { 'is-active': selectedUser === user.name },\n                  )}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={handleInputChange}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={resetQuery}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={classNames(\n                  'button is-success mr-6',\n                  { 'is-outlined': selectedCategories.length !== 0 },\n                )}\n                onClick={resetSelectedCategory}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={classNames(\n                    'button mr-2 my-1',\n                    { 'is-info': selectedCategories.includes(category.title) },\n                  )}\n                  href=\"#/\"\n                  onClick={() => selectNewCategory(category.title)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={resetAllFilters}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {visibleProducts.length > 0\n            ? (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        ID\n\n                        <a\n                          href=\"#/\"\n                          onClick={() => handleSortBy('id')}\n                        >\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames(\n                                'fas',\n                                { 'fa-sort': sortBy !== 'id' },\n                              )}\n                              // className=\"fas fa-sort\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Product\n\n                        <a\n                          href=\"#/\"\n                          onClick={() => handleSortBy('product')}\n                        >\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames(\n                                'fas',\n                                { 'fa-sort': sortBy !== 'product' },\n                              )}\n                              // className=\"fas fa-sort-down\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Category\n\n                        <a\n                          href=\"#/\"\n                          onClick={() => handleSortBy('category')}\n                        >\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames(\n                                'fas',\n                                { 'fa-sort': sortBy !== 'category' },\n                              )}\n                              // className=\"fas fa-sort-up\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        User\n\n                        <a\n                          href=\"#/\"\n                          onClick={() => handleSortBy('user')}\n                        >\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames(\n                                'fas',\n                                { 'fa-sort': sortBy !== 'user' },\n                              )}\n                              // className=\"fas fa-sort\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {visibleProducts.map(product => (\n                    <tr data-cy=\"Product\" key={product.id}>\n                      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                        {product.id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">{product.name}</td>\n                      <td data-cy=\"ProductCategory\">{`${product.category.icon} - ${product.category.title}`}</td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={classNames(\n                          { 'has-text-link': product.category.owner.sex === 'm' },\n                          { 'has-text-danger': product.category.owner.sex === 'f' },\n                        )}\n                      >\n                        {product.category.owner.name}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )\n            : (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}